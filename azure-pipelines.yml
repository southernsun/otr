name: OffTheRecord-CI

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
- script: dotnet build OffTheRecord/OffTheRecord.sln --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- script: dotnet test OffTheRecord/OffTheRecord.sln --logger "trx;LogFileName=testresults.trx"
  displayName: 'Running Tests'

- script: dotnet test OffTheRecord/OffTheRecord.sln --collect:"XPlat Code Coverage"
  displayName: 'Collect Code Coverage'

- task: DotNetCoreCLI@2
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path $(Build.SourcesDirectory) dotnet-reportgenerator-globaltool
  displayName: Install ReportGenerator tool  

- script: $(Build.SourcesDirectory)/reportgenerator -reports:$(Build.SourcesDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"Cobertura"
    displayName: Create reports

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: $(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml

- task: PublishTestResults@2
  displayName: 'Publish test results'
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'
    failTaskOnFailedTests: true